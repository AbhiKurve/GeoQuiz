package com.bignerdranch.android.geoquiz;import android.content.Context;import android.content.Intent;import android.os.StrictMode;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;public class MainActivity extends AppCompatActivity {    private static final int REQUEST_CODE_CHEAT = 0;    private Button mTrueButton;    private Button mFalseButton;    private Button mNextButton;    private Button mPreviousButton;    private Button mCheatButton;    private TextView mQuestionTextView;    private int mCurrentIndex=0;    // TAG constant for log , conventionally set to name of the class.    private String TAG = "MainActivity";    // Key-value pair for saveInstanceState    private String KEY_INDEX="Index";    // Key-value pair for Intent extra for CheatActivity    // Good practice to use full package name as qualifier to prevent name collision from other apps    private static final String EXTRA_ANSWER_IS_TRUE="com.bignerdranch.android.geoquiz.answer_is_true";    // Array of Question class    private Question[] mQuestionBank = new Question[] {        // Call the question constructor several times and create an array of question objects.            new Question(R.string.question_oceans, true),            new Question(R.string.question_mideast, false),            new Question(R.string.question_africa, false),            new Question(R.string.question_americas, true),            new Question(R.string.question_asia, true),    };     // Updates question    private void updateQuestion () {        Log.d(TAG,"Updating question text for question#" + mCurrentIndex, new Exception());        int question = mQuestionBank[mCurrentIndex].getTextResId();        //Set the first question in TextView using the setText method.        // Question var is created above        mQuestionTextView.setText(question);    }    // Creates a new intent to open CheatActivity    public static Intent newIntent (Context packageContext, boolean answer_is_true){        Intent i = new Intent(packageContext,CheatActivity.class);        i.putExtra(EXTRA_ANSWER_IS_TRUE,answer_is_true);        return i;    }    // Checks whether answer is true or not    private void checkAnswer (boolean userPressedTrue) {         boolean ansIsTrue = mQuestionBank[mCurrentIndex].isAnswerTrue();        if (ansIsTrue == userPressedTrue)        {            Toast.makeText(MainActivity.this,R.string.true_toast,Toast.LENGTH_SHORT).show();        }        else {            Toast.makeText(MainActivity.this, R.string.false_toast, Toast.LENGTH_SHORT).show();        }    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Log.d(TAG, "OnCreate method called");        mQuestionTextView = (TextView)findViewById(R.id.question_text_view);        mQuestionTextView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                updateQuestion();            }        });        // If savedInstanceState already contains some value for mCurrentIndex, use that value.        // Specify default value in parentheses to be used if something is not present in savedInstanceState        if (savedInstanceState != null) {            mCurrentIndex = savedInstanceState.getInt(KEY_INDEX,0);        }        // To show the question by default        updateQuestion();        mTrueButton = (Button) findViewById(R.id.true_button);        mTrueButton.setOnClickListener(new View.OnClickListener() {            public void onClick(View v) {                checkAnswer(true);            }        });        mCheatButton = (Button) findViewById(R.id.cheat_button) ;        mCheatButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                boolean answerIsTrue = mQuestionBank[mCurrentIndex].isAnswerTrue();                // Start CheatActivity using explicit intent                //Take in Context , ClassName as param for explicit intents                //Intent i = new Intent(MainActivity.this , CheatActivity.class);                Intent i = CheatActivity.newIntent(MainActivity.this, answerIsTrue);                startActivityForResult(i,REQUEST_CODE_CHEAT);            }        });        mNextButton = (Button)findViewById(R.id.next_button);        mNextButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                // Update Index                        // Logic to cycle through the questions                mCurrentIndex = (mCurrentIndex + 1) % mQuestionBank.length;                // Update QuestionTextView                updateQuestion();            }        });        mPreviousButton = (Button) findViewById(R.id.prev_button);        mPreviousButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if (mCurrentIndex == 0) mCurrentIndex = mQuestionBank.length-1;                else mCurrentIndex = mCurrentIndex -1;                updateQuestion();                //Alternate logic using ternary operator                //mCurrentIndex = (mCurrentIndex == 0) ? mQuestionBank.length-1 : mCurrentIndex -1;            }        });        mFalseButton = (Button) findViewById(R.id.false_button);        mFalseButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                checkAnswer(false);            }        });    }    @Override    // Save mCurrentIndex across device configuration changes like rotation    public void onSaveInstanceState(Bundle savedInstanceState){        super.onSaveInstanceState(savedInstanceState);        Log.i(TAG, "onSaveInstanceState Called");        // Call putInt on savedInstanceState to ACTUALLY put mCurrentIndex in a bundle        savedInstanceState.putInt(KEY_INDEX,mCurrentIndex);    }}